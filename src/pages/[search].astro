---
import { getPlaylist } from "../db";
import {
  CACHE_FOR_A_FEW_DAYS,
  CACHE_FOREVER,
  formatSearchQuery,
  isEmptyString,
  safeParseNumber,
} from "../util";

const videos = await getPlaylist();

const searchParam = Astro.params.search;
if (!searchParam || isEmptyString(searchParam)) {
  return new Response(
    "No search query provided. Try formatting your request like `https://wtw.dev/react-hooks`",
    { status: 400 }
  );
}

const potentialId = safeParseNumber(searchParam);
const video = videos.find((v) => v.id === potentialId);
if (video) {
  Astro.response.headers.set("Cache-Control", CACHE_FOREVER);
  return Astro.redirect(video.youtubeUrl);
}

// fall back to search query
const searchQuery = formatSearchQuery(searchParam);
const searchResults = await getPlaylist(searchQuery);

const firstResult = searchResults[0];
if (!firstResult) {
  return new Response(`No results found for \`${searchQuery}\``, {
    status: 200,
  });
}

Astro.response.headers.set("Cache-Control", CACHE_FOR_A_FEW_DAYS);

return Astro.redirect(firstResult.youtubeUrl);
---
