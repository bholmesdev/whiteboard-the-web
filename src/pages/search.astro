---
export const prerender = false;

import Card from "~components/Card.astro";
import VideoEmbed from "~components/Video.astro";
import { getPlaylist } from "../db";

const { searchParams } = new URL(Astro.request.url);
const query = searchParams.get("query");

Astro.response.headers.set("Cache-Control", "max-age=86400, s-maxage=86400");

const videos = await getPlaylist(query ?? undefined);
---

<main class="list">
  {
    videos.map(
      async ({
        id,
        title,
        description,
        slug,
        youtubeUrl,
        embedUrl,
        thumbnails,
      }) => {
        return (
          <Card {title} {slug} {youtubeUrl}>
            <Fragment set:html={description} slot="body" />
            <VideoEmbed
              slot="video"
              {id}
              {title}
              {embedUrl}
              {thumbnails}
              hasColorIntersectionObserver
            />
          </Card>
        );
      }
    )
  }
</main>

<style>
  .list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .list :global(article):nth-child(4n + 1) {
    --color: var(--orange);
    --color-hs: var(--orange-hs);
  }

  .list :global(article):nth-child(4n + 2) {
    --color: var(--green);
    --color-hs: var(--green-hs);
  }

  .list :global(article):nth-child(4n + 3) {
    --color: var(--pink);
    --color-hs: var(--pink-hs);
  }

  .list :global(article):nth-child(4n + 4) {
    --color: var(--purple);
    --color-hs: var(--purple-hs);
  }
</style>
